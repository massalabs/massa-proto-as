// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0
//   protoc        v3.21.12

import { Writer, Reader, Protobuf } from "as-proto/assembly";

export class Slot {
  static encode(message: Slot, writer: Writer): void {
    writer.uint32(9);
    writer.fixed64(message.period);

    writer.uint32(21);
    writer.fixed32(message.thread);
  }

  static decode(reader: Reader, length: i32): Slot {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new Slot();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.period = reader.fixed64();
          break;

        case 2:
          message.thread = reader.fixed32();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  period: i64;
  thread: i32;

  constructor(period: i64 = 0, thread: i32 = 0) {
    this.period = period;
    this.thread = thread;
  }
}

export function encodeSlot(message: Slot): Uint8Array {
  return Protobuf.encode(message, Slot.encode);
}

export function decodeSlot(buffer: Uint8Array): Slot {
  return Protobuf.decode<Slot>(buffer, Slot.decode);
}
