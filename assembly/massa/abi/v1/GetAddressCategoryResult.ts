// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0
//   protoc        v4.23.2

import { Writer, Reader, Protobuf } from "as-proto/assembly";
import { AddressCategory } from "../../model/v1/AddressCategory";

export class GetAddressCategoryResult {
  static encode(message: GetAddressCategoryResult, writer: Writer): void {
    writer.uint32(8);
    writer.int32(message.category);
  }

  static decode(reader: Reader, length: i32): GetAddressCategoryResult {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new GetAddressCategoryResult();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.category = reader.int32();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  category: AddressCategory;

  constructor(category: AddressCategory = 0) {
    this.category = category;
  }
}

export function encodeGetAddressCategoryResult(
  message: GetAddressCategoryResult
): Uint8Array {
  return Protobuf.encode(message, GetAddressCategoryResult.encode);
}

export function decodeGetAddressCategoryResult(
  buffer: Uint8Array
): GetAddressCategoryResult {
  return Protobuf.decode<GetAddressCategoryResult>(
    buffer,
    GetAddressCategoryResult.decode
  );
}
