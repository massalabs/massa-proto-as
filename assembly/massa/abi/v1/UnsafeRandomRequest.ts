// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0
//   protoc        v4.23.3

import { Writer, Reader, Protobuf } from "as-proto/assembly";
import { UInt32Value } from "../../../google/protobuf/UInt32Value";

export class UnsafeRandomRequest {
  static encode(message: UnsafeRandomRequest, writer: Writer): void {
    const mandatoryNumBytes = message.mandatoryNumBytes;
    if (mandatoryNumBytes !== null) {
      writer.uint32(18);
      writer.fork();
      UInt32Value.encode(mandatoryNumBytes, writer);
      writer.ldelim();
    }
  }

  static decode(reader: Reader, length: i32): UnsafeRandomRequest {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new UnsafeRandomRequest();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 2:
          message.mandatoryNumBytes = UInt32Value.decode(
            reader,
            reader.uint32()
          );
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  mandatoryNumBytes: UInt32Value | null;

  constructor(mandatoryNumBytes: UInt32Value | null = null) {
    this.mandatoryNumBytes = mandatoryNumBytes;
  }
}

export function encodeUnsafeRandomRequest(
  message: UnsafeRandomRequest
): Uint8Array {
  return Protobuf.encode(message, UnsafeRandomRequest.encode);
}

export function decodeUnsafeRandomRequest(
  buffer: Uint8Array
): UnsafeRandomRequest {
  return Protobuf.decode<UnsafeRandomRequest>(
    buffer,
    UnsafeRandomRequest.decode
  );
}
