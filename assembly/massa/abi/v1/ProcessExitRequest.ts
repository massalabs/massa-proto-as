// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0
//   protoc        v4.23.2

import { Writer, Reader, Protobuf } from "as-proto/assembly";
import { UInt32Value } from "../../../google/protobuf/UInt32Value";

export class ProcessExitRequest {
  static encode(message: ProcessExitRequest, writer: Writer): void {
    const mandatoryCode = message.mandatoryCode;
    if (mandatoryCode !== null) {
      writer.uint32(10);
      writer.fork();
      UInt32Value.encode(mandatoryCode, writer);
      writer.ldelim();
    }
  }

  static decode(reader: Reader, length: i32): ProcessExitRequest {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new ProcessExitRequest();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.mandatoryCode = UInt32Value.decode(reader, reader.uint32());
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  mandatoryCode: UInt32Value | null;

  constructor(mandatoryCode: UInt32Value | null = null) {
    this.mandatoryCode = mandatoryCode;
  }
}

export function encodeProcessExitRequest(
  message: ProcessExitRequest
): Uint8Array {
  return Protobuf.encode(message, ProcessExitRequest.encode);
}

export function decodeProcessExitRequest(
  buffer: Uint8Array
): ProcessExitRequest {
  return Protobuf.decode<ProcessExitRequest>(buffer, ProcessExitRequest.decode);
}
