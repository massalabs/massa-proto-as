// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0
//   protoc        v4.23.2

import { Writer, Reader, Protobuf } from "as-proto/assembly";
import { NativeHash } from "..\\..\\model\\v1\\NativeHash";

export class NativeHashResult {
  static encode(message: NativeHashResult, writer: Writer): void {
    const hash = message.hash;
    if (hash !== null) {
      writer.uint32(10);
      writer.fork();
      NativeHash.encode(hash, writer);
      writer.ldelim();
    }
  }

  static decode(reader: Reader, length: i32): NativeHashResult {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new NativeHashResult();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.hash = NativeHash.decode(reader, reader.uint32());
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  hash: NativeHash | null;

  constructor(hash: NativeHash | null = null) {
    this.hash = hash;
  }
}

export function encodeNativeHashResult(message: NativeHashResult): Uint8Array {
  return Protobuf.encode(message, NativeHashResult.encode);
}

export function decodeNativeHashResult(buffer: Uint8Array): NativeHashResult {
  return Protobuf.decode<NativeHashResult>(buffer, NativeHashResult.decode);
}
