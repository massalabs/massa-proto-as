// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0
//   protoc        v4.23.2

import { Writer, Reader, Protobuf } from "as-proto/assembly";

export class CheckNativeSigResult {
  static encode(message: CheckNativeSigResult, writer: Writer): void {
    writer.uint32(8);
    writer.bool(message.isValid);
  }

  static decode(reader: Reader, length: i32): CheckNativeSigResult {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new CheckNativeSigResult();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.isValid = reader.bool();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  isValid: bool;

  constructor(isValid: bool = false) {
    this.isValid = isValid;
  }
}

export function encodeCheckNativeSigResult(
  message: CheckNativeSigResult
): Uint8Array {
  return Protobuf.encode(message, CheckNativeSigResult.encode);
}

export function decodeCheckNativeSigResult(
  buffer: Uint8Array
): CheckNativeSigResult {
  return Protobuf.decode<CheckNativeSigResult>(
    buffer,
    CheckNativeSigResult.decode
  );
}
