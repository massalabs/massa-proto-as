// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0
//   protoc        v4.22.2

import { Writer, Reader, Protobuf } from "as-proto/assembly";

export class VerifyEvmSigRequest {
  static encode(message: VerifyEvmSigRequest, writer: Writer): void {
    writer.uint32(10);
    writer.bytes(message.sig);

    writer.uint32(18);
    writer.bytes(message.message);

    writer.uint32(26);
    writer.bytes(message.pubKey);
  }

  static decode(reader: Reader, length: i32): VerifyEvmSigRequest {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new VerifyEvmSigRequest();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.sig = reader.bytes();
          break;

        case 2:
          message.message = reader.bytes();
          break;

        case 3:
          message.pubKey = reader.bytes();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  sig: Uint8Array;
  message: Uint8Array;
  pubKey: Uint8Array;

  constructor(
    sig: Uint8Array = new Uint8Array(0),
    message: Uint8Array = new Uint8Array(0),
    pubKey: Uint8Array = new Uint8Array(0)
  ) {
    this.sig = sig;
    this.message = message;
    this.pubKey = pubKey;
  }
}

export function encodeVerifyEvmSigRequest(
  message: VerifyEvmSigRequest
): Uint8Array {
  return Protobuf.encode(message, VerifyEvmSigRequest.encode);
}

export function decodeVerifyEvmSigRequest(
  buffer: Uint8Array
): VerifyEvmSigRequest {
  return Protobuf.decode<VerifyEvmSigRequest>(
    buffer,
    VerifyEvmSigRequest.decode
  );
}
