// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0
//   protoc        v4.23.3

import { Writer, Reader, Protobuf } from "as-proto/assembly";
import { UInt64Value } from "../../../google/protobuf/UInt64Value";
import { NativeTime } from "../../model/v1/NativeTime";

export class CheckedDivRemNativeTimeResult {
  static encode(message: CheckedDivRemNativeTimeResult, writer: Writer): void {
    const mandatoryQuotient = message.mandatoryQuotient;
    if (mandatoryQuotient !== null) {
      writer.uint32(10);
      writer.fork();
      UInt64Value.encode(mandatoryQuotient, writer);
      writer.ldelim();
    }

    const remainder = message.remainder;
    if (remainder !== null) {
      writer.uint32(18);
      writer.fork();
      NativeTime.encode(remainder, writer);
      writer.ldelim();
    }
  }

  static decode(reader: Reader, length: i32): CheckedDivRemNativeTimeResult {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new CheckedDivRemNativeTimeResult();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.mandatoryQuotient = UInt64Value.decode(
            reader,
            reader.uint32()
          );
          break;

        case 2:
          message.remainder = NativeTime.decode(reader, reader.uint32());
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  mandatoryQuotient: UInt64Value | null;
  remainder: NativeTime | null;

  constructor(
    mandatoryQuotient: UInt64Value | null = null,
    remainder: NativeTime | null = null
  ) {
    this.mandatoryQuotient = mandatoryQuotient;
    this.remainder = remainder;
  }
}

export function encodeCheckedDivRemNativeTimeResult(
  message: CheckedDivRemNativeTimeResult
): Uint8Array {
  return Protobuf.encode(message, CheckedDivRemNativeTimeResult.encode);
}

export function decodeCheckedDivRemNativeTimeResult(
  buffer: Uint8Array
): CheckedDivRemNativeTimeResult {
  return Protobuf.decode<CheckedDivRemNativeTimeResult>(
    buffer,
    CheckedDivRemNativeTimeResult.decode
  );
}
