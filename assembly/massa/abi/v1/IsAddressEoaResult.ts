// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0
//   protoc        v4.23.3

import { Writer, Reader, Protobuf } from "as-proto/assembly";

export class IsAddressEoaResult {
  static encode(message: IsAddressEoaResult, writer: Writer): void {
    writer.uint32(8);
    writer.bool(message.isEoa);
  }

  static decode(reader: Reader, length: i32): IsAddressEoaResult {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new IsAddressEoaResult();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.isEoa = reader.bool();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  isEoa: bool;

  constructor(isEoa: bool = false) {
    this.isEoa = isEoa;
  }
}

export function encodeIsAddressEoaResult(
  message: IsAddressEoaResult
): Uint8Array {
  return Protobuf.encode(message, IsAddressEoaResult.encode);
}

export function decodeIsAddressEoaResult(
  buffer: Uint8Array
): IsAddressEoaResult {
  return Protobuf.decode<IsAddressEoaResult>(buffer, IsAddressEoaResult.decode);
}
