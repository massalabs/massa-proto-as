// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0
//   protoc        v4.23.2

import { Writer, Reader, Protobuf } from "as-proto/assembly";
import { StringValue } from "../../../google/protobuf/StringValue";

export class DeferredCallRegisterResult {
  static encode(message: DeferredCallRegisterResult, writer: Writer): void {
    const callId = message.callId;
    if (callId !== null) {
      writer.uint32(10);
      writer.fork();
      StringValue.encode(callId, writer);
      writer.ldelim();
    }
  }

  static decode(reader: Reader, length: i32): DeferredCallRegisterResult {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new DeferredCallRegisterResult();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.callId = StringValue.decode(reader, reader.uint32());
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  callId: StringValue | null;

  constructor(callId: StringValue | null = null) {
    this.callId = callId;
  }
}

export function encodeDeferredCallRegisterResult(
  message: DeferredCallRegisterResult
): Uint8Array {
  return Protobuf.encode(message, DeferredCallRegisterResult.encode);
}

export function decodeDeferredCallRegisterResult(
  buffer: Uint8Array
): DeferredCallRegisterResult {
  return Protobuf.decode<DeferredCallRegisterResult>(
    buffer,
    DeferredCallRegisterResult.decode
  );
}
