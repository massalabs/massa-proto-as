// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0
//   protoc        v4.23.2

import { Writer, Reader, Protobuf } from "as-proto/assembly";
import { NativeSig } from "..\\..\\model\\v1\\NativeSig";

export class NativeSigFromStringResult {
  static encode(message: NativeSigFromStringResult, writer: Writer): void {
    const convertedSig = message.convertedSig;
    if (convertedSig !== null) {
      writer.uint32(10);
      writer.fork();
      NativeSig.encode(convertedSig, writer);
      writer.ldelim();
    }
  }

  static decode(reader: Reader, length: i32): NativeSigFromStringResult {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new NativeSigFromStringResult();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.convertedSig = NativeSig.decode(reader, reader.uint32());
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  convertedSig: NativeSig | null;

  constructor(convertedSig: NativeSig | null = null) {
    this.convertedSig = convertedSig;
  }
}

export function encodeNativeSigFromStringResult(
  message: NativeSigFromStringResult
): Uint8Array {
  return Protobuf.encode(message, NativeSigFromStringResult.encode);
}

export function decodeNativeSigFromStringResult(
  buffer: Uint8Array
): NativeSigFromStringResult {
  return Protobuf.decode<NativeSigFromStringResult>(
    buffer,
    NativeSigFromStringResult.decode
  );
}
