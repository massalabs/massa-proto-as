// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0
//   protoc        v4.23.2

import { Writer, Reader, Protobuf } from "as-proto/assembly";

export class VerifySigRequest {
  static encode(message: VerifySigRequest, writer: Writer): void {
    writer.uint32(10);
    writer.string(message.sig);

    writer.uint32(18);
    writer.bytes(message.message);

    writer.uint32(26);
    writer.string(message.pubKey);
  }

  static decode(reader: Reader, length: i32): VerifySigRequest {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new VerifySigRequest();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.sig = reader.string();
          break;

        case 2:
          message.message = reader.bytes();
          break;

        case 3:
          message.pubKey = reader.string();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  sig: string;
  message: Uint8Array;
  pubKey: string;

  constructor(
    sig: string = "",
    message: Uint8Array = new Uint8Array(0),
    pubKey: string = ""
  ) {
    this.sig = sig;
    this.message = message;
    this.pubKey = pubKey;
  }
}

export function encodeVerifySigRequest(message: VerifySigRequest): Uint8Array {
  return Protobuf.encode(message, VerifySigRequest.encode);
}

export function decodeVerifySigRequest(buffer: Uint8Array): VerifySigRequest {
  return Protobuf.decode<VerifySigRequest>(buffer, VerifySigRequest.decode);
}
